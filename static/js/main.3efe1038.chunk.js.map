{"version":3,"sources":["styles.js","features/game/pages.js","features/game/phases.js","features/game/players.js","features/game/results.js","features/game/gameSlice.js","features/game/cards.js","features/game/values.js","features/game/pages/Welcome/styles.js","features/game/pages/Welcome/index.js","features/game/components/Bank/styles.js","features/game/components/Chip/styles.js","features/game/components/Chip/index.js","features/game/components/Bank/index.js","features/game/components/Stake/styles.js","features/game/components/Stake/index.js","features/game/pages/Game/styles.js","features/game/components/Controls/styles.js","features/game/components/Controls/index.js","features/game/components/Player/styles.js","features/game/components/Card/styles.js","features/game/components/Card/index.js","features/game/components/Player/index.js","features/game/components/Results/styles.js","features/game/components/Results/index.js","features/game/pages/Game/index.js","App.js","app/store.js","index.js"],"names":["Wrapper","styled","div","PAGE_WELCOME","PAGE_GAME","PHASE_BET","PHASE_USER_TURN","PHASE_DEALER_TURN","PHASE_RESULTS","PLAYER_USER","PLAYER_DEALER","RESULT_USER_WIN","RESULT_DEALER_WIN","RESULT_PUSH","RESULT_GAME_OVER","initialState","page","phase","account","stake","cards","name","value","userCards","dealerCards","result","gameSlice","createSlice","reducers","startGame","state","raiseStake","action","payload","deal","drawCard","cardIndex","Math","floor","random","length","card","splice","stand","setResult","nextRound","endGame","actions","countPoints","points","reduce","sum","add","some","BLACK_JACK_VALUE","ACE_HIGH_VALUE","selectPage","game","selectPhase","selectAccount","selectStake","selectUserCards","selectDealerCards","selectUserPoints","selectDealerPoints","selectResult","Title","h1","Welcome","dispatch","useDispatch","className","Button","onClick","size","variant","BankElement","Account","ChipElement","Chip","color","useSelector","type","style","backgroundColor","Bank","map","chip","StakeElement","Stake","InnerWrapper","ControlsElement","Control","Controls","controlsDisabled","disabled","PlayerElement","Cards","Info","Name","p","Points","CardElement","img","Card","useState","marginTop","setMarginTop","deg","setDeg","useEffect","alt","src","transform","Player","player","userPoints","dealerPoints","drawDealerCard","setTimeout","Message","Alert","resultTypes","message","Results","Game","resultType","App","store","configureStore","reducer","gameReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAOeA,EALCC,IAAOC,IAAV,wG,gBCFAC,EAAe,UACfC,EAAY,OCDZC,EAAY,MACZC,EAAkB,YAClBC,EAAoB,cACpBC,EAAgB,UCHhBC,EAAc,OACdC,EAAgB,SCDhBC,EAAkB,WAClBC,EAAoB,aACpBC,EAAc,OACdC,EAAmB,YCS1BC,EAAe,CACnBC,KAAMb,EACNc,MAAOZ,EACPa,QALqB,IAMrBC,MAAO,EACPC,MCjBY,CACZ,CACEC,KAAM,WACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,SACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,IAET,CACED,KAAM,YACNC,MAAO,IAET,CACED,KAAM,aACNC,MAAO,IAET,CACED,KAAM,YACNC,MAAO,IAET,CACED,KAAM,cACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,aACNC,MAAO,IAET,CACED,KAAM,eACNC,MAAO,IAET,CACED,KAAM,gBACNC,MAAO,IAET,CACED,KAAM,eACNC,MAAO,IAET,CACED,KAAM,YACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CACED,KAAM,UACNC,MAAO,GAET,CAC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","file":"static/js/main.3efe1038.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  background-image: url(assets/background.jpg);\n  background-size: cover;\n`;\n\nexport default Wrapper;\n","export const PAGE_WELCOME = 'welcome';\nexport const PAGE_GAME = 'game';\n\nexport const pages = [PAGE_WELCOME, PAGE_GAME];\n","export const PHASE_BET = 'bet';\nexport const PHASE_USER_TURN = 'user_turn';\nexport const PHASE_DEALER_TURN = 'dealer_turn';\nexport const PHASE_RESULTS = 'results';\n\nexport const phases = [PHASE_BET, PHASE_USER_TURN, PHASE_DEALER_TURN, PHASE_RESULTS];\n","export const PLAYER_USER = 'user';\nexport const PLAYER_DEALER = 'dealer';\n\nexport const players = [PLAYER_USER, PLAYER_DEALER];\n","export const RESULT_USER_WIN = 'user_win';\nexport const RESULT_DEALER_WIN = 'dealer_win';\nexport const RESULT_PUSH = 'push';\nexport const RESULT_GAME_OVER = 'game_over';\n\nexport const results = [RESULT_USER_WIN, RESULT_DEALER_WIN, RESULT_PUSH, RESULT_GAME_OVER];\n","import { createSlice } from '@reduxjs/toolkit';\nimport { PAGE_GAME, PAGE_WELCOME } from './pages';\nimport {\n  PHASE_BET, PHASE_DEALER_TURN, PHASE_RESULTS, PHASE_USER_TURN,\n} from './phases';\nimport { PLAYER_USER, PLAYER_DEALER } from './players';\nimport allCards from './cards';\nimport { ACE_HIGH_VALUE, ACE_LOW_VALUE, BLACK_JACK_VALUE } from './values';\nimport { RESULT_PUSH, RESULT_USER_WIN } from './results';\n\nconst initialAccount = 1000;\n\nconst initialState = {\n  page: PAGE_WELCOME,\n  phase: PHASE_BET,\n  account: initialAccount,\n  stake: 0,\n  cards: allCards,\n  userCards: [],\n  dealerCards: [],\n  result: null,\n};\n\nexport const gameSlice = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    startGame: (state) => {\n      state.page = PAGE_GAME;\n    },\n    raiseStake: (state, action) => {\n      state.stake += action.payload;\n      state.account -= action.payload;\n    },\n    deal: (state) => {\n      state.phase = PHASE_USER_TURN;\n    },\n    drawCard: (state, action) => {\n      const cardIndex = Math.floor(Math.random() * state.cards.length);\n      const card = state.cards[cardIndex];\n      state.cards.splice(cardIndex, 1);\n\n      if (action.payload === PLAYER_USER) {\n        state.userCards = [...state.userCards, card];\n      }\n      if (action.payload === PLAYER_DEALER) {\n        state.dealerCards = [...state.dealerCards, card];\n      }\n    },\n    stand: (state) => {\n      state.phase = PHASE_DEALER_TURN;\n    },\n    setResult: (state, action) => {\n      state.result = action.payload;\n      state.phase = PHASE_RESULTS;\n    },\n    nextRound: (state) => {\n      if (state.result === RESULT_USER_WIN) {\n        state.account += state.stake * 2;\n      } else if (state.result === RESULT_PUSH) {\n        state.account += state.stake;\n      }\n\n      state.phase = PHASE_BET;\n      state.stake = 0;\n      state.userCards = [];\n      state.dealerCards = [];\n      state.result = null;\n    },\n    endGame: (state) => {\n      state.page = PAGE_WELCOME;\n      state.account = initialAccount;\n    },\n  },\n});\n\nexport const {\n  startGame, raiseStake, deal, drawCard, stand, setResult, nextRound, endGame,\n} = gameSlice.actions;\n\nconst countPoints = (cards) => {\n  let points = cards.reduce((sum, add) => sum + add.value, 0);\n  const hasAce = cards.some((card) => card.value === ACE_LOW_VALUE);\n\n  if (hasAce) {\n    const aceValuesDiff = ACE_HIGH_VALUE - ACE_LOW_VALUE;\n    const aceThreshold = BLACK_JACK_VALUE - aceValuesDiff;\n\n    if (points <= aceThreshold) {\n      points += aceValuesDiff;\n    }\n  }\n\n  return points;\n};\n\nexport const selectPage = (state) => state.game.page;\nexport const selectPhase = (state) => state.game.phase;\nexport const selectAccount = (state) => state.game.account;\nexport const selectStake = (state) => state.game.stake;\nexport const selectUserCards = (state) => state.game.userCards;\nexport const selectDealerCards = (state) => state.game.dealerCards;\nexport const selectUserPoints = (state) => countPoints(state.game.userCards);\nexport const selectDealerPoints = (state) => countPoints(state.game.dealerCards);\nexport const selectResult = (state) => state.game.result;\n\nexport default gameSlice.reducer;\n","const cards = [\n  {\n    name: 'club-ace',\n    value: 1,\n  },\n  {\n    name: 'club-2',\n    value: 2,\n  },\n  {\n    name: 'club-3',\n    value: 3,\n  },\n  {\n    name: 'club-4',\n    value: 4,\n  },\n  {\n    name: 'club-5',\n    value: 5,\n  },\n  {\n    name: 'club-6',\n    value: 6,\n  },\n  {\n    name: 'club-7',\n    value: 7,\n  },\n  {\n    name: 'club-8',\n    value: 8,\n  },\n  {\n    name: 'club-9',\n    value: 9,\n  },\n  {\n    name: 'club-10',\n    value: 10,\n  },\n  {\n    name: 'club-jack',\n    value: 10,\n  },\n  {\n    name: 'club-queen',\n    value: 10,\n  },\n  {\n    name: 'club-king',\n    value: 10,\n  },\n  {\n    name: 'diamond-ace',\n    value: 1,\n  },\n  {\n    name: 'diamond-2',\n    value: 2,\n  },\n  {\n    name: 'diamond-3',\n    value: 3,\n  },\n  {\n    name: 'diamond-4',\n    value: 4,\n  },\n  {\n    name: 'diamond-5',\n    value: 5,\n  },\n  {\n    name: 'diamond-6',\n    value: 6,\n  },\n  {\n    name: 'diamond-7',\n    value: 7,\n  },\n  {\n    name: 'diamond-8',\n    value: 8,\n  },\n  {\n    name: 'diamond-9',\n    value: 9,\n  },\n  {\n    name: 'diamond-10',\n    value: 10,\n  },\n  {\n    name: 'diamond-jack',\n    value: 10,\n  },\n  {\n    name: 'diamond-queen',\n    value: 10,\n  },\n  {\n    name: 'diamond-king',\n    value: 10,\n  },\n  {\n    name: 'heart-ace',\n    value: 1,\n  },\n  {\n    name: 'heart-2',\n    value: 2,\n  },\n  {\n    name: 'heart-3',\n    value: 3,\n  },\n  {\n    name: 'heart-4',\n    value: 4,\n  },\n  {\n    name: 'heart-5',\n    value: 5,\n  },\n  {\n    name: 'heart-6',\n    value: 6,\n  },\n  {\n    name: 'heart-7',\n    value: 7,\n  },\n  {\n    name: 'heart-8',\n    value: 8,\n  },\n  {\n    name: 'heart-9',\n    value: 9,\n  },\n  {\n    name: 'heart-10',\n    value: 10,\n  },\n  {\n    name: 'heart-jack',\n    value: 10,\n  },\n  {\n    name: 'heart-queen',\n    value: 10,\n  },\n  {\n    name: 'heart-king',\n    value: 10,\n  },\n  {\n    name: 'spade-ace',\n    value: 1,\n  },\n  {\n    name: 'spade-2',\n    value: 2,\n  },\n  {\n    name: 'spade-3',\n    value: 3,\n  },\n  {\n    name: 'spade-4',\n    value: 4,\n  },\n  {\n    name: 'spade-5',\n    value: 5,\n  },\n  {\n    name: 'spade-6',\n    value: 6,\n  },\n  {\n    name: 'spade-7',\n    value: 7,\n  },\n  {\n    name: 'spade-8',\n    value: 8,\n  },\n  {\n    name: 'spade-9',\n    value: 9,\n  },\n  {\n    name: 'spade-10',\n    value: 10,\n  },\n  {\n    name: 'spade-jack',\n    value: 10,\n  },\n  {\n    name: 'spade-queen',\n    value: 10,\n  },\n  {\n    name: 'spade-king',\n    value: 10,\n  },\n];\n\nexport default cards;\n","export const BLACK_JACK_VALUE = 21;\n\nexport const ACE_LOW_VALUE = 1;\nexport const ACE_HIGH_VALUE = 11;\n\nexport const aceValues = [ACE_LOW_VALUE, ACE_HIGH_VALUE];\n\nexport const DEALER_HIT_LIMIT = 16;\n","import styled from 'styled-components';\n\nconst Title = styled.h1`\n  color: var(--secondary);\n  font-size: 40px;\n  font-weight: 300; \n  letter-spacing: 1px; \n  padding: 0 0 40px; \n  \n  @media (min-width: 768px) {  \n    font-size: 70px;\n  }\n`;\n\nexport default Title;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { useDispatch } from 'react-redux';\nimport Title from './styles';\nimport { startGame } from '../../gameSlice';\n\nfunction Welcome() {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(startGame());\n  };\n\n  return (\n    <div className=\"d-flex flex-column justify-content-center align-items-center w-100 h-100\">\n      <Title className=\"text-uppercase\">Black Jack</Title>\n      <Button\n        onClick={handleClick}\n        size=\"lg\"\n        variant=\"outline-secondary\"\n        className=\"text-uppercase\"\n      >\n        play\n      </Button>\n    </div>\n  );\n}\n\nexport default Welcome;\n","import styled from 'styled-components';\n\nexport const BankElement = styled.div`\n  bottom: 0%;\n  width: 240px;\n  background-color: #C5B358;\n  border: 5px double black;\n  border-radius: 5px;\n  \n  @media (min-width: 768px) {  \n    width: 300px;\n  }\n`;\n\nexport const Account = styled.div`\n   background-color: rgba(1,1,1,0.3);\n`;\n","import styled from 'styled-components';\n\nconst ChipElement = styled.div`\n  width: 40px;\n  height: 40px;\n  border: 3px dashed black;\n  box-shadow: 2px 2px 4px 1px #000000;\n  \n  @media (min-width: 768px) {  \n    width: 60px;\n    height: 60px;\n  }\n`;\n\nexport default ChipElement;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChipElement from './styles';\nimport { raiseStake, selectAccount } from '../../gameSlice';\n\nfunction Chip({ value, color }) {\n  const dispatch = useDispatch();\n  const account = useSelector(selectAccount);\n\n  const handleClick = () => {\n    if (account >= value) {\n      dispatch(raiseStake(value));\n    }\n  };\n\n  return (\n    <ChipElement\n      onClick={handleClick}\n      type=\"button\"\n      style={{ backgroundColor: color }}\n      className=\"rounded-circle d-flex justify-content-center align-items-center font-weight-bold m-2 text-secondary\"\n    >\n      {value}\n    </ChipElement>\n  );\n}\n\nexport default Chip;\n\nChip.propTypes = {\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { BankElement, Account } from './styles';\nimport Chip from '../Chip';\nimport { selectAccount, selectPhase } from '../../gameSlice';\nimport { PHASE_BET } from '../../phases';\n\nfunction Bank() {\n  const chips = [\n    { value: 5, color: '#B22222' },\n    { value: 25, color: '#006400' },\n    { value: 50, color: '#6495ED' },\n    { value: 100, color: '#DA70D6' },\n  ];\n\n  const account = useSelector(selectAccount);\n  const phase = useSelector(selectPhase);\n\n  return (\n    <BankElement className=\"d-flex flex-column align-self-center position-fixed\">\n      <Account className=\"text-center text-uppercase font-weight-bold p-2 text-secondary\">\n        Bank: $\n        {account}\n      </Account>\n\n      {\n        phase === PHASE_BET && (\n          <div className=\"d-flex justify-content-between\">\n            {\n              chips.map((chip) => <Chip key={chip.value} value={chip.value} color={chip.color} />)\n            }\n          </div>\n        )\n      }\n\n    </BankElement>\n  );\n}\n\nexport default Bank;\n","import styled from 'styled-components';\n\nconst StakeElement = styled.div`\n  width: 60px;\n  height: 60px;\n  border: 3px dashed black;\n  background-color: #C5B358;\n  box-shadow: 3px 3px 5px 1px #000000;\n  margin-right: 10px;\n  \n  @media (min-width: 768px) {  \n    width: 100px;\n    height: 100px;\n    margin-right: 50px;\n    border: 5px dashed black;\n  }\n`;\n\nexport default StakeElement;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport StakeElement from './styles';\nimport { selectStake } from '../../gameSlice';\n\nfunction Stake() {\n  const stake = useSelector(selectStake);\n\n  return (\n    <StakeElement\n      className=\"rounded-circle d-flex align-self-center justify-content-center align-items-center text-secondary font-weight-bold\"\n    >\n      {stake}\n    </StakeElement>\n  );\n}\n\nexport default Stake;\n","import styled from 'styled-components';\n\nconst InnerWrapper = styled.div`\n  @media (orientation: portrait) {\n    top: 45%;\n  }\n  \n  @media (orientation: landscape) {\n    top: 38%;\n  }\n  \n  @media (min-width: 768px) {  \n    top: 45%;\n  }\n  \n`;\nexport default InnerWrapper;\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\nexport const ControlsElement = styled.div`\n  @media (orientation: portrait) {\n      flex-direction: column;\n  }\n  \n  @media (orientation: landscape) {\n     flex-direction: row;\n  }\n  \n  @media (min-width: 768px) {  \n    flex-direction: column;\n  }\n`;\n\nexport const Control = styled(Button)`\n  width: 60px;\n  height: 30px;\n  font-size: 12px;\n  \n  @media (min-width: 768px) {  \n    width: 100px;\n    height: 40px;\n    font-size: 20px;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Control, ControlsElement } from './styles';\nimport {\n  deal, drawCard, selectPhase, selectStake, stand,\n} from '../../gameSlice';\nimport { PHASE_BET, PHASE_USER_TURN } from '../../phases';\nimport { PLAYER_USER } from '../../players';\n\nfunction Controls() {\n  const dispatch = useDispatch();\n\n  const stake = useSelector(selectStake);\n  const phase = useSelector(selectPhase);\n\n  const handleDeal = () => {\n    if (stake > 0) {\n      dispatch(deal());\n    }\n  };\n\n  const handleHit = () => {\n    if (phase === PHASE_USER_TURN) {\n      dispatch(drawCard(PLAYER_USER));\n    }\n  };\n\n  const handleStand = () => {\n    dispatch(stand());\n  };\n\n  const controlsDisabled = phase !== PHASE_USER_TURN;\n\n  return (\n    <ControlsElement className=\"d-flex align-items-center justify-content-center\">\n      {\n        phase === PHASE_BET && (\n          <Control\n            onClick={handleDeal}\n            type=\"button\"\n            variant=\"secondary\"\n            className=\"m-1 text-info\"\n          >\n            Deal\n          </Control>\n        )\n      }\n\n      {\n        phase !== PHASE_BET && (\n          <>\n            <Control\n              onClick={handleHit}\n              disabled={controlsDisabled}\n              type=\"button\"\n              variant=\"secondary\"\n              className=\"m-1 text-info\"\n            >\n              Hit\n            </Control>\n            <Control\n              onClick={handleStand}\n              disabled={controlsDisabled}\n              type=\"button\"\n              variant=\"secondary\"\n              className=\"m-1 text-info\"\n            >\n              Stand\n            </Control>\n          </>\n        )\n      }\n\n    </ControlsElement>\n  );\n}\n\nexport default Controls;\n","import styled from 'styled-components';\n\nexport const PlayerElement = styled.div`\n  @media (orientation: portrait) {\n    width: 100%;\n    flex-direction: row;\n  }\n  \n   @media (orientation: landscape) {\n    bottom: 30%;\n    width: 100%;\n    height: 1%;\n    flex-direction: column;\n  }\n  \n  @media (min-width: 768px)  {\n    width: 5%;\n    bottom: 20%;\n  }\n  \n  &.dealer {\n    @media (orientation: portrait) {\n      top: 15%;\n    }\n    \n    @media (orientation: landscape) {\n      top: 20%;\n    }\n    \n    @media (min-width: 768px)  {\n      top: 20%;\n    } \n  }\n  \n  &.user {\n    @media (orientation: portrait) {\n      bottom: 15%;\n    }\n    \n    @media (orientation: landscape) {\n      bottom: 30%;\n    }\n    \n    @media (min-width: 768px)  {\n      bottom: 20%;\n    } \n  }\n`;\n\nexport const Cards = styled.div`\n  width: 90%;\n  \n  @media (min-width: 768px) {\n    width: 10%;\n  }\n`;\n\nexport const Info = styled.div`\n  right: 0%;\n  flex-direction: column;\n  ;\n  @media (min-width: 768px) {\n    right: 10%;\n    flex-direction: row;\n  }\n`;\n\nexport const Name = styled.p`\n  font-size: 10px;\n  text-transform:capitalize;\n  \n  @media (min-width: 768px){\n    font-size: 20px;\n  }\n`;\n\nexport const Points = styled.div`\n  width: 40px;\n  height: 40px;\n  background-color: rgba(1,1,1,0.2);\n  \n  @media (min-width: 768px) {  \n    width: 50px;\n    height: 50px;\n  }\n`;\n","import styled from 'styled-components';\n\nconst CardElement = styled.img`\n  background-color: white;\n  width: 70px;\n  height: 105px;\n  border-radius: 2px;\n  border: 0.5px solid black;\n  \n  animation-duration: 0.5s;\n  animation-name: slidein;\n  \n  @keyframes slidein {\n    from {\n      margin-left: 100%;\n    }\n    to {\n      margin-left:0 %;\n    }\n  }\n  \n   @media (min-width: 768px) {  \n    width: 100px;\n    height: 150px;\n    margin-left: -50px;\n  }\n`;\n\nexport default CardElement;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport CardElement from './styles';\n\nfunction Card({ name }) {\n  const [marginTop, setMarginTop] = useState(0);\n  const [deg, setDeg] = useState(0);\n\n  useEffect(() => {\n    setMarginTop(Math.floor(Math.random() * (60)) - 30);\n    setDeg(Math.floor(Math.random() * (40)) - 20);\n  }, []);\n\n  return (\n    <CardElement\n      alt={name}\n      src={`assets/cards/${name}.svg`}\n      style={{ marginTop: `${marginTop}px`, transform: `rotate(${deg}deg)` }}\n    />\n  );\n}\n\nexport default Card;\n\nCard.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  PlayerElement, Cards, Info, Name, Points,\n} from './styles';\nimport {\n  drawCard, selectDealerCards, selectDealerPoints, selectPhase, selectUserCards, selectUserPoints,\n} from '../../gameSlice';\nimport { PHASE_DEALER_TURN, PHASE_USER_TURN } from '../../phases';\nimport { PLAYER_DEALER, PLAYER_USER } from '../../players';\nimport Card from '../Card';\nimport { DEALER_HIT_LIMIT } from '../../values';\n\nfunction Player({ player }) {\n  const dispatch = useDispatch();\n  const phase = useSelector(selectPhase);\n\n  const userCards = useSelector(selectUserCards);\n  const userPoints = useSelector(selectUserPoints);\n  const dealerCards = useSelector(selectDealerCards);\n  const dealerPoints = useSelector(selectDealerPoints);\n\n  const drawUserCard = () => {\n    if (player === PLAYER_USER) {\n      dispatch(drawCard(PLAYER_USER));\n      dispatch(drawCard(PLAYER_USER));\n    }\n\n    if (player === PLAYER_DEALER) {\n      dispatch(drawCard(PLAYER_DEALER));\n    }\n  };\n\n  const drawDealerCard = () => {\n    if (dealerPoints <= DEALER_HIT_LIMIT && dealerPoints <= userPoints) {\n      dispatch(drawCard(PLAYER_DEALER));\n    }\n  };\n\n  useEffect(() => {\n    if (phase === PHASE_USER_TURN) {\n      drawUserCard();\n    }\n\n    if (phase === PHASE_DEALER_TURN && player === PLAYER_DEALER) {\n      setTimeout(() => {\n        drawDealerCard();\n      }, 500);\n    }\n  }, [phase]);\n\n  useEffect(() => {\n    if (phase === PHASE_DEALER_TURN && player === PLAYER_DEALER) {\n      setTimeout(() => {\n        drawDealerCard();\n      }, 500);\n    }\n  }, [dealerPoints]);\n\n  const cards = player === PLAYER_USER ? userCards : dealerCards;\n  const points = player === PLAYER_USER ? userPoints : dealerPoints;\n\n  return (\n    <PlayerElement className={`${player} d-flex justify-content-center align-items-center position-fixed`}>\n      <Cards className=\"d-flex align-items-center\">\n        {cards.map((card) => <Card key={card.name} name={card.name} />)}\n      </Cards>\n      <Info className=\"d-flex align-items-center justify-content-around m-2 position-fixed\">\n        <Name className=\"m-4 text-uppercase font-weight-bold text-secondary\">{player}</Name>\n        <Points className=\"rounded-circle d-flex justify-content-center align-items-center font-weight-bold text-secondary\">\n          {points}\n        </Points>\n      </Info>\n    </PlayerElement>\n  );\n}\n\nexport default Player;\n\nPlayer.propTypes = {\n  player: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\nimport Alert from 'react-bootstrap/Alert';\n\nexport const Wrapper = styled.div`\n  z-index: 1;\n  background-color: rgba(1,1,1,0.6);\n`;\n\nexport const Message = styled(Alert)`\n  background-color: #C5B358;\n  color: black;\n  border: 5px double black;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Wrapper, Message } from './styles';\nimport {\n  RESULT_DEALER_WIN, RESULT_GAME_OVER, RESULT_PUSH, RESULT_USER_WIN,\n} from '../../results';\nimport { endGame, nextRound } from '../../gameSlice';\n\nconst resultTypes = {\n  [RESULT_USER_WIN]: {\n    message: 'You win!',\n  },\n  [RESULT_DEALER_WIN]: {\n    message: 'Dealer win!',\n  },\n  [RESULT_PUSH]: {\n    message: 'Push!',\n  },\n  [RESULT_GAME_OVER]: {\n    message: 'Game over!',\n  },\n};\n\nfunction Results({ type }) {\n  const dispatch = useDispatch();\n\n  setTimeout(() => {\n    dispatch(nextRound());\n\n    if (type === RESULT_GAME_OVER) {\n      dispatch(endGame());\n    }\n  }, 2000);\n\n  return (\n    <Wrapper className=\"w-100 h-100 d-flex flex-column justify-content-center align-items-center\">\n      <Message\n        className=\"d-flex w-50 justify-content-center align-items-center text-uppercase font-weight-bold\"\n      >\n        {resultTypes[type].message}\n      </Message>\n    </Wrapper>\n  );\n}\n\nexport default Results;\n\nResults.propTypes = {\n  type: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Bank from '../../components/Bank';\nimport Stake from '../../components/Stake';\nimport InnerWrapper from './styles';\nimport Controls from '../../components/Controls';\nimport Player from '../../components/Player';\nimport {\n  selectAccount,\n  selectDealerPoints, selectPhase, selectResult, selectUserPoints, setResult,\n} from '../../gameSlice';\nimport {\n  PHASE_BET, PHASE_DEALER_TURN, PHASE_RESULTS, PHASE_USER_TURN,\n} from '../../phases';\nimport { PLAYER_DEALER, PLAYER_USER } from '../../players';\nimport { BLACK_JACK_VALUE, DEALER_HIT_LIMIT } from '../../values';\nimport Results from '../../components/Results';\nimport {\n  RESULT_DEALER_WIN, RESULT_GAME_OVER, RESULT_PUSH, RESULT_USER_WIN,\n} from '../../results';\n\nfunction Game() {\n  const dispatch = useDispatch();\n\n  const phase = useSelector(selectPhase);\n  const userPoints = useSelector(selectUserPoints);\n  const dealerPoints = useSelector(selectDealerPoints);\n  const account = useSelector(selectAccount);\n  const result = useSelector(selectResult);\n\n  useEffect(() => {\n    let resultType = '';\n\n    if (phase === PHASE_USER_TURN) {\n      if (userPoints > BLACK_JACK_VALUE) {\n        resultType = RESULT_DEALER_WIN;\n      }\n    }\n\n    if (phase === PHASE_DEALER_TURN && dealerPoints > DEALER_HIT_LIMIT) {\n      if (dealerPoints > BLACK_JACK_VALUE) {\n        resultType = RESULT_USER_WIN;\n      } else if (userPoints === dealerPoints) {\n        resultType = RESULT_PUSH;\n      } else if (userPoints > dealerPoints) {\n        resultType = RESULT_USER_WIN;\n      } else if (userPoints < dealerPoints) {\n        resultType = RESULT_DEALER_WIN;\n      }\n    }\n\n    if (resultType === RESULT_DEALER_WIN && account === 0) {\n      resultType = RESULT_GAME_OVER;\n    }\n\n    if (resultType !== '') {\n      setTimeout(() => {\n        dispatch(setResult(resultType));\n      }, 1000);\n    }\n  }, [userPoints, dealerPoints]);\n\n  return (\n    <div className=\"d-flex flex-column w-100 align-items-center\">\n      <InnerWrapper className=\"d-flex align-self-center position-fixed w-100 justify-content-center\">\n        <Stake />\n        <Controls />\n      </InnerWrapper>\n\n      {\n        phase !== PHASE_BET && (\n          <>\n            <Player player={PLAYER_DEALER} />\n            <Player player={PLAYER_USER} />\n          </>\n        )\n      }\n\n      <Bank />\n\n      {\n        phase === PHASE_RESULTS && (\n          <Results type={result} />\n        )\n      }\n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Wrapper from './styles';\nimport { selectPage } from './features/game/gameSlice';\nimport { PAGE_WELCOME, PAGE_GAME } from './features/game/pages';\nimport Welcome from './features/game/pages/Welcome';\nimport Game from './features/game/pages/Game';\n\nfunction App() {\n  const page = useSelector(selectPage);\n\n  return (\n    <Wrapper className=\"d-flex vh-100 w-100\">\n      { page === PAGE_WELCOME && <Welcome /> }\n      { page === PAGE_GAME && <Game /> }\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport gameReducer from '../features/game/gameSlice';\n\nconst store = configureStore({\n  reducer: {\n    game: gameReducer,\n  },\n});\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './app/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './custom.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}